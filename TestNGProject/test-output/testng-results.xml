<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
    <line>
      <![CDATA[Window Maximized]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="49204" started-at="2021-02-27T10:56:58 IST" finished-at="2021-02-27T10:57:47 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="49204" started-at="2021-02-27T10:56:58 IST" finished-at="2021-02-27T10:57:47 IST">
      <class name="testNgpackage.NewTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testNgpackage.NewTest@56aac163]" name="beforeTest" is-config="true" duration-ms="12397" started-at="2021-02-27T10:56:58 IST" finished-at="2021-02-27T10:57:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="test()[pri:0, instance:testNgpackage.NewTest@56aac163]" name="test" duration-ms="21" started-at="2021-02-27T10:57:10 IST" finished-at="2021-02-27T10:57:10 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [hello] but found [Hello]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [hello] but found [Hello]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testNgpackage.NewTest.test(NewTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String)[pri:0, instance:testNgpackage.NewTest@56aac163]" name="test" duration-ms="2" started-at="2021-02-27T10:57:10 IST" data-provider="creds" finished-at="2021-02-27T10:57:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ganesh1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[patil]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String)[pri:0, instance:testNgpackage.NewTest@56aac163]" name="test" duration-ms="6" started-at="2021-02-27T10:57:10 IST" data-provider="creds" finished-at="2021-02-27T10:57:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[XYZ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PQR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String)[pri:1, instance:testNgpackage.NewTest@56aac163]" name="f" duration-ms="30450" started-at="2021-02-27T10:57:10 IST" finished-at="2021-02-27T10:57:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ganesh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Patil]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Window Maximized]]>
            </line>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testNgpackage.NewTest@56aac163]" name="afterTest" is-config="true" duration-ms="6237" started-at="2021-02-27T10:57:41 IST" finished-at="2021-02-27T10:57:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testNgpackage.NewTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
